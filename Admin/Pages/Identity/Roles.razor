@page "/pages/identity/roles"
@attribute [Authorize(Policy = Permissions.Roles.View)]
@using SharedR.Responses.Identity
@using System.ComponentModel.Design

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<Header OnClose="Cancel" Title="Roles" Description="Manage Roles." />
@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudTable Hover="true" Elevation="25" Items="_roleList" Dense="true" Filter="new Func<RoleResponse, bool>(Search)" @bind-role="_role">
        <ToolBarContent>
            <div class="justify-center mud-text-align-center">
                @if (_canCreateRoles)
                {
                    <MudFab Color="Color.Success" Icon="@Icons.Material.Filled.Add" Size="Size.Small" IconSize="Size.Medium" Class="mr-2" OnClick="(() => InvokeModal())" DisableElevation="true" aria-label="add" />
                }
            </div>
            <MudToolBarSpacer />
            @if (_canSearchRoles)
            {
                <MudTextField @bind-Value="_searchString" Immediate="true" FullWidth=false Placeholder="Search For Roles" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
            }
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<RoleResponse, object>(x => x.Name)">Role</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<RoleResponse, object>(x => x.Description)">Description</MudTableSortLabel></MudTh>
            <MudTh Style="text-align:right">Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Role">
                <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="Description">
                <MudHighlighter Text="@context.Description" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="Actions" Style="text-align: right">
                @if (_canViewRoleClaims || _canEditRoles || _canDeleteRoles)
                    {
                <MudMenu DisableElevation="true" Dense="true" Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small" Color="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                    @if (_canViewRoleClaims)
                        {
                        <MudMenuItem @onclick="@(() => ManagePermissions(@context.Id))">Permissions</MudMenuItem>
                        }
                    @if (_canEditRoles)
                        {
                        <MudMenuItem @onclick="@(() => InvokeModal(@context.Id))">Edit</MudMenuItem>
                        }
                    @if (_canDeleteRoles)
                        {
                        <MudMenuItem @onclick="@(() => Delete(@context.Id))">Delete</MudMenuItem>
                        }
                </MudMenu>
                    }
                    else
                    {
                    <MudButton Variant="Variant.Filled"
                               DisableElevation="true"
                               StartIcon="@Icons.Material.Filled.DoNotTouch"
                               IconColor="Color.Secondary"
                               Size="Size.Small"
                               Color="Color.Surface">
                        No Allowed Actions
                    </MudButton>
                    }
            </MudTd>
        </RowTemplate>
    </MudTable>
}
