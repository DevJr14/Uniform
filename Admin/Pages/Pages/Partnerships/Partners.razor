@page "/pages/partnerships/partners"

@using SharedR.Responses.Partners
<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<Header OnClose="Cancel" Title="Partners" Description="Manage Partners." />
@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
<MudTable Hover="true" Elevation="25" Items="_partners" Dense="true" Bordered="false" Striped="false" Filter="new Func<PartnerResponse, bool>(Search)" @bind-partner="_partner">
    <ToolBarContent>
        <div class="justify-center mud-text-align-center">
            @if (_canCreatePartners)
            {
                <MudFab Color="Color.Success" Icon="@Icons.Material.Filled.Add" Size="Size.Small" IconSize="Size.Medium" Class="mr-2" OnClick="(() => InvokeModal(Guid.Empty))" DisableElevation="true" aria-label="add" />
                @if (_canExportPartners)
                {
                    <MudFab Color="Color.Secondary" Icon="@Icons.Material.Filled.Download" Size="Size.Small" IconSize="Size.Medium" DisableElevation="true" aria-label="export" />
                }
            }
            else
            {
                @if (_canExportPartners)
                {
                    <MudFab Color="Color.Secondary" Icon="@Icons.Material.Filled.Download" Size="Size.Small" IconSize="Size.Medium" DisableElevation="true" aria-label="export" />
                }
            }
        </div>
        <MudToolBarSpacer />
        @if (_canSearchPartners)
        {
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for clients" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
        }
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<PartnerResponse, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PartnerResponse, object>(x => x.Type)">Type</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PartnerResponse, object>(x => x.RegistrationNo)">Registration No</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PartnerResponse, object>(x => x.RegistrationDate)">Registration Date</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PartnerResponse, object>(x => x.TaxNo)">Tax No</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PartnerResponse, object>(x => x.Description)">Description</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PartnerResponse, object>(x => x.IsVerified)">Is Verified</MudTableSortLabel></MudTh>
        <MudTh Style="text-align:right">Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">
            <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Type">@context.Type</MudTd>
        <MudTd DataLabel="RegistrationNo">
            <MudHighlighter Text="@context.RegistrationNo" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="RegistrationDate">@context.RegistrationDate</MudTd>
        <MudTd DataLabel="TaxNo">@context.TaxNo</MudTd>
        <MudTd DataLabel="Description">
            <MudHighlighter Text="@context.Description" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="IsVerified"><MudCheckBox @bind-Checked="@context.IsVerified" Size="Size.Small" ReadOnly Color="Color.Secondary" /></MudTd>
        <MudTd DataLabel="Actions" Style="text-align: right">
            @if (_canEditPartners || _canDeletePartners)
                {
            <MudMenu Label="Actions" Variant="Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" Size="Size.Small" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                @if (_canEditPartners)
                    {
                        <MudMenuItem OnClick="(() => InvokeModal(context.Id))">Edit</MudMenuItem>
                    }
                @if (_canDeletePartners)
                    {
                        <MudMenuItem OnClick="(() => Delete(context.Id))">Delete</MudMenuItem>
                    }
                @if(_canActivatePartners)
                    {
                        if (context.IsVerified)
                        {
                            <MudMenuItem OnClick="(() => Activator(context.Id))">De-Activate</MudMenuItem>
                        }
                        else
                        {
                            <MudMenuItem OnClick="(() => Activator(context.Id))">Activate</MudMenuItem>
                        }
                    }
            </MudMenu>
                }
                else
                {
                <MudButton Variant="Variant.Filled"
                           DisableElevation="true"
                           StartIcon="@Icons.Material.Filled.DoNotTouch"
                           IconColor="Color.Secondary"
                           Size="Size.Small"
                           Color="Color.Surface">
                    No Allowed Actions
                </MudButton>
                }
        </MudTd>
    </RowTemplate>
</MudTable>
}
